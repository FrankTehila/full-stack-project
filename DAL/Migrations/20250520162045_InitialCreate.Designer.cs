// <auto-generated />
using System;
using DAL.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(dbClass))]
    [Migration("20250520162045_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int")
                        .HasColumnName("leaderId");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07227DB59F");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("DAL.models.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(3, 1)")
                        .HasColumnName("duration");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int")
                        .HasColumnName("leaderId");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("roomId");

                    b.Property<TimeOnly>("StartTime")
                        .HasPrecision(0)
                        .HasColumnType("time(0)")
                        .HasColumnName("startTime");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07B0C2164B");

                    b.HasIndex("LeaderId");

                    b.HasIndex("RoomId");

                    b.ToTable("Meeting", (string)null);
                });

            modelBuilder.Entity("DAL.models.Room", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsBoard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProjector")
                        .HasColumnType("bit");

                    b.Property<int>("NumOfComputers")
                        .HasColumnType("int");

                    b.Property<int>("NumOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07F185C933");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("DAL.models.TeamLeader", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<int>("NumOfWorkers")
                        .HasColumnType("int")
                        .HasColumnName("numOfWorkers");

                    b.HasKey("Id")
                        .HasName("PK__TeamLead__3214EC0707B20BA5");

                    b.ToTable("TeamLeader", (string)null);
                });

            modelBuilder.Entity("DAL.models.Meeting", b =>
                {
                    b.HasOne("DAL.models.TeamLeader", "Leader")
                        .WithMany("Meetings")
                        .HasForeignKey("LeaderId")
                        .IsRequired()
                        .HasConstraintName("FK__Meeting__leaderI__68487DD7");

                    b.HasOne("DAL.models.Room", "Room")
                        .WithMany("Meetings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Meeting__roomId__693CA210");

                    b.Navigation("Leader");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DAL.models.Room", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("DAL.models.TeamLeader", b =>
                {
                    b.Navigation("Meetings");
                });
#pragma warning restore 612, 618
        }
    }
}
